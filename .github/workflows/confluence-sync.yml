name: Sync Documentation to Confluence

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  sync-to-confluence:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Upload documentation to Confluence
        env:
          CONFLUENCE_URL: "https://sharan99r.atlassian.net"
          CONFLUENCE_USER: ${{ secrets.CONFLUENCE_USER }}
          CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
          SPACE_KEY: ${{ secrets.SPACE_KEY }}
        run: |
          python confluence_uploader_hierarchical.py

      - name: Post result comment
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const success = '${{ job.status }}' === 'success';
            const icon = success ? '‚úÖ' : '‚ùå';
            const status = success ? 'Successfully Updated' : 'Failed to Update';
            const body = success ? 
              `${icon} **Documentation ${status} in Confluence!**
              
              üîó [View Documentation](https://sharan99r.atlassian.net/wiki/spaces/~712020a1106f7965b7429fa169a05d4788f4d5)
              
              **PR #${{ github.event.pull_request.number }}**: ${{ github.event.pull_request.title }}
              **Author**: @${{ github.event.pull_request.user.login }}` :
              `${icon} **Documentation ${status}**
              
              [Check workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.
              
              **PR #${{ github.event.pull_request.number }}**: ${{ github.event.pull_request.title }}`;

            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
